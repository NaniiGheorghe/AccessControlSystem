/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-11-19T06:18:30.042Z")

@Api(value = "create_user", description = "the create_user API")
public interface CreateUserApi {

    @ApiOperation(value = "Create new User", nickname = "createNewUser", notes = "Create new User", tags={ "Administrator", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Created successfully"),
        @ApiResponse(code = 400, message = "Bad input"),
        @ApiResponse(code = 401, message = "Wrong user credentials"),
        @ApiResponse(code = 404, message = "Provided room was not found"),
        @ApiResponse(code = 409, message = "Provided room name already exist") })
    @RequestMapping(value = "/create_user",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> createNewUser(@NotNull @ApiParam(value = "Employee username", required = true) @Valid @RequestParam(value = "username", required = true) String username,@NotNull @ApiParam(value = "Employee password", required = true) @Valid @RequestParam(value = "password", required = true) String password,@ApiParam(value = "Employee name") @Valid @RequestParam(value = "firstName", required = false) String firstName,@ApiParam(value = "Employee last name") @Valid @RequestParam(value = "lastName", required = false) String lastName,@ApiParam(value = "Employee usergroup, is not required, by default is used User") @Valid @RequestParam(value = "userGroup", required = false) String userGroup);

}
