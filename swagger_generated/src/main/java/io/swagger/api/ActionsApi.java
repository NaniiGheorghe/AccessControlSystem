/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Action;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-11-19T06:18:30.042Z")

@Api(value = "actions", description = "the actions API")
public interface ActionsApi {

    @ApiOperation(value = "Administrator should be able to see all actions based on a query", nickname = "getActions", notes = "By passing some specific query patrametrs administrator should be able to see al actions ", response = Action.class, responseContainer = "List", tags={ "Administrator", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "All actions based on input query", response = Action.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Bad input"),
        @ApiResponse(code = 401, message = "Wrong user credentials"),
        @ApiResponse(code = 404, message = "No actions were found") })
    @RequestMapping(value = "/actions",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<List<Action>> getActions(@ApiParam(value = "Pass the room ID which will be used in the query") @Valid @RequestParam(value = "roomId", required = false) String roomId,@ApiParam(value = "Pass the employee ID which will be used in the query") @Valid @RequestParam(value = "employeeId", required = false) String employeeId,@ApiParam(value = "Pass the period which will be used in the query") @Valid @RequestParam(value = "period", required = false) String period);

}
